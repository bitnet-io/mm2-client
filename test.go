package main

import (
    "encoding/json"
    "fmt"
    "io/ioutil"
    "net/http"
)

type AutoGenerated struct {
	QuoteResponse struct {
		Result []struct {
			Language                   string `json:"language"`
			Region                     string `json:"region"`
			QuoteType                  string `json:"quoteType"`
			TypeDisp                   string `json:"typeDisp"`
			QuoteSourceName            string `json:"quoteSourceName"`
			Triggerable                bool   `json:"triggerable"`
			CustomPriceAlertConfidence string `json:"customPriceAlertConfidence"`
			QuoteSummary               struct {
				Earnings struct {
					MaxAge        int `json:"maxAge"`
					EarningsChart struct {
						Quarterly []struct {
							Date     string  `json:"date"`
							Actual   float64 `json:"actual"`
							Estimate float64 `json:"estimate"`
						} `json:"quarterly"`
						CurrentQuarterEstimate     float64 `json:"currentQuarterEstimate"`
						CurrentQuarterEstimateDate string  `json:"currentQuarterEstimateDate"`
						CurrentQuarterEstimateYear int     `json:"currentQuarterEstimateYear"`
						EarningsDate               []int   `json:"earningsDate"`
					} `json:"earningsChart"`
					FinancialsChart struct {
						Yearly []struct {
							Date     int   `json:"date"`
							Revenue  int64 `json:"revenue"`
							Earnings int   `json:"earnings"`
						} `json:"yearly"`
						Quarterly []struct {
							Date     string `json:"date"`
							Revenue  int64  `json:"revenue"`
							Earnings int    `json:"earnings"`
						} `json:"quarterly"`
					} `json:"financialsChart"`
					FinancialCurrency string `json:"financialCurrency"`
				} `json:"earnings"`
			} `json:"quoteSummary"`
			Currency                          string   `json:"currency"`
			Components                        []string `json:"components"`
			FirstTradeDateMilliseconds        int64    `json:"firstTradeDateMilliseconds"`
			PriceHint                         int      `json:"priceHint"`
			TotalCash                         int64    `json:"totalCash"`
			FloatShares                       int64    `json:"floatShares"`
			Ebitda                            int64    `json:"ebitda"`
			ShortRatio                        float64  `json:"shortRatio"`
			PreMarketChange                   float64  `json:"preMarketChange"`
			PreMarketChangePercent            float64  `json:"preMarketChangePercent"`
			PreMarketTime                     int      `json:"preMarketTime"`
			TargetPriceHigh                   float64  `json:"targetPriceHigh"`
			TargetPriceLow                    float64  `json:"targetPriceLow"`
			TargetPriceMean                   float64  `json:"targetPriceMean"`
			TargetPriceMedian                 float64  `json:"targetPriceMedian"`
			PreMarketPrice                    float64  `json:"preMarketPrice"`
			HeldPercentInsiders               float64  `json:"heldPercentInsiders"`
			HeldPercentInstitutions           float64  `json:"heldPercentInstitutions"`
			PostMarketChangePercent           float64  `json:"postMarketChangePercent"`
			PostMarketTime                    int      `json:"postMarketTime"`
			PostMarketPrice                   float64  `json:"postMarketPrice"`
			PostMarketChange                  float64  `json:"postMarketChange"`
			RegularMarketChange               float64  `json:"regularMarketChange"`
			RegularMarketChangePercent        float64  `json:"regularMarketChangePercent"`
			RegularMarketTime                 int      `json:"regularMarketTime"`
			RegularMarketPrice                float64  `json:"regularMarketPrice"`
			RegularMarketDayHigh              float64  `json:"regularMarketDayHigh"`
			RegularMarketDayRange             string   `json:"regularMarketDayRange"`
			RegularMarketDayLow               float64  `json:"regularMarketDayLow"`
			RegularMarketVolume               int      `json:"regularMarketVolume"`
			SharesShort                       int      `json:"sharesShort"`
			SharesShortPrevMonth              int      `json:"sharesShortPrevMonth"`
			ShortPercentFloat                 float64  `json:"shortPercentFloat"`
			RegularMarketPreviousClose        float64  `json:"regularMarketPreviousClose"`
			Bid                               float64  `json:"bid"`
			Ask                               float64  `json:"ask"`
			BidSize                           int      `json:"bidSize"`
			AskSize                           int      `json:"askSize"`
			Exchange                          string   `json:"exchange"`
			Market                            string   `json:"market"`
			MessageBoardID                    string   `json:"messageBoardId"`
			FullExchangeName                  string   `json:"fullExchangeName"`
			ShortName                         string   `json:"shortName"`
			LongName                          string   `json:"longName"`
			RegularMarketOpen                 float64  `json:"regularMarketOpen"`
			AverageDailyVolume3Month          int      `json:"averageDailyVolume3Month"`
			AverageDailyVolume10Day           int      `json:"averageDailyVolume10Day"`
			Beta                              float64  `json:"beta"`
			FiftyTwoWeekLowChange             float64  `json:"fiftyTwoWeekLowChange"`
			FiftyTwoWeekLowChangePercent      float64  `json:"fiftyTwoWeekLowChangePercent"`
			FiftyTwoWeekRange                 string   `json:"fiftyTwoWeekRange"`
			FiftyTwoWeekHighChange            float64  `json:"fiftyTwoWeekHighChange"`
			FiftyTwoWeekHighChangePercent     float64  `json:"fiftyTwoWeekHighChangePercent"`
			FiftyTwoWeekLow                   float64  `json:"fiftyTwoWeekLow"`
			FiftyTwoWeekHigh                  float64  `json:"fiftyTwoWeekHigh"`
			DividendDate                      int      `json:"dividendDate"`
			ExDividendDate                    int      `json:"exDividendDate"`
			EarningsTimestamp                 int      `json:"earningsTimestamp"`
			EarningsTimestampStart            int      `json:"earningsTimestampStart"`
			EarningsTimestampEnd              int      `json:"earningsTimestampEnd"`
			TrailingAnnualDividendRate        float64  `json:"trailingAnnualDividendRate"`
			TrailingPE                        float64  `json:"trailingPE"`
			PegRatio                          float64  `json:"pegRatio"`
			DividendsPerShare                 float64  `json:"dividendsPerShare"`
			DividendRate                      float64  `json:"dividendRate"`
			TrailingAnnualDividendYield       float64  `json:"trailingAnnualDividendYield"`
			DividendYield                     float64  `json:"dividendYield"`
			Revenue                           int64    `json:"revenue"`
			PriceToSales                      float64  `json:"priceToSales"`
			MarketState                       string   `json:"marketState"`
			EpsTrailingTwelveMonths           float64  `json:"epsTrailingTwelveMonths"`
			EpsForward                        float64  `json:"epsForward"`
			EpsCurrentYear                    float64  `json:"epsCurrentYear"`
			EpsNextQuarter                    float64  `json:"epsNextQuarter"`
			PriceEpsCurrentYear               float64  `json:"priceEpsCurrentYear"`
			PriceEpsNextQuarter               float64  `json:"priceEpsNextQuarter"`
			SharesOutstanding                 int64    `json:"sharesOutstanding"`
			BookValue                         float64  `json:"bookValue"`
			FiftyDayAverage                   float64  `json:"fiftyDayAverage"`
			FiftyDayAverageChange             float64  `json:"fiftyDayAverageChange"`
			FiftyDayAverageChangePercent      float64  `json:"fiftyDayAverageChangePercent"`
			TwoHundredDayAverage              float64  `json:"twoHundredDayAverage"`
			TwoHundredDayAverageChange        float64  `json:"twoHundredDayAverageChange"`
			TwoHundredDayAverageChangePercent float64  `json:"twoHundredDayAverageChangePercent"`
			MarketCap                         int64    `json:"marketCap"`
			ForwardPE                         float64  `json:"forwardPE"`
			PriceToBook                       float64  `json:"priceToBook"`
			SourceInterval                    int      `json:"sourceInterval"`
			ExchangeDataDelayedBy             int      `json:"exchangeDataDelayedBy"`
			ExchangeTimezoneName              string   `json:"exchangeTimezoneName"`
			ExchangeTimezoneShortName         string   `json:"exchangeTimezoneShortName"`
			PageViews                         struct {
				MidTermTrend   string `json:"midTermTrend"`
				LongTermTrend  string `json:"longTermTrend"`
				ShortTermTrend string `json:"shortTermTrend"`
			} `json:"pageViews"`
			GmtOffSetMilliseconds int    `json:"gmtOffSetMilliseconds"`
			EsgPopulated          bool   `json:"esgPopulated"`
			Tradeable             bool   `json:"tradeable"`
			CryptoTradeable       bool   `json:"cryptoTradeable"`
			Symbol                string `json:"symbol"`
		} `json:"result"`
	} `json:"quoteResponse"`
}
func main() {

    // Get request
    resp, err := http.Get("https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/v2/get-quotes?region=US&symbols=F,IBM%2C&rapidapi-key=91ac13b7e0msh58a82c551837a5cp18ee79jsn4664b59ac23e")
    if err != nil {
            fmt.Println("No response from request")
    }
    defer resp.Body.Close()
    body, err := ioutil.ReadAll(resp.Body) // response body is []byte

    var result AutoGenerated
    if err := json.Unmarshal(body, &result); err != nil {  // Parse []byte to the go struct pointer
            fmt.Println("Can not unmarshal JSON")
    }
    fmt.Printf("%+v\n", result)

    // fmt.Println(PrettyPrint(result))

    // Loop through the data node for the FirstName
//    for _, rec := range result.AutoGenerated {
  //          fmt.Println(rec.Language)
 //   }







}

// PrettyPrint to print struct in a readable way
func PrettyPrint(i interface{}) string {
    s, _ := json.MarshalIndent(i, "", "\t")
    return string(s)
}
